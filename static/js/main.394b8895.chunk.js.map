{"version":3,"sources":["features/page/page.module.css","features/page/page-slice.js","app/config.js","features/page/page.js","lib.js","features/elements/generate-element.js","features/elements/elements-slice.js","features/elements/elements.js","features/elements/elements-form.js","app.js","app/store.js","serviceWorker.js","index.js","features/elements/elements.module.css"],"names":["module","exports","pageSlice","createSlice","name","initialState","width","height","selectPage","state","page","Page","props","children","useSelector","className","styles","style","backgroundColor","random","min","max","Math","floor","pad","num","size","s","substr","length","generateColor","excludeColors","randomColor","r","toString","g","b","generatedColor","includes","color","createArray","fn","arr","i","push","generateElement","pageSize","id","nanoid","x","y","elementsSlice","reducers","renew","payload","updateElementPosition","item","find","actions","selectElements","elements","Rectangle","React","memo","DraggableRectangle","nodeRef","useRef","dispatch","useDispatch","handleDraggableStop","useCallback","_","node","dataset","draggableChild","ref","data-id","enableUserSelectHack","bounds","defaultPosition","onStop","Elements","map","element","key","ElementsForm","form","onSubmit","e","preventDefault","formData","FormData","currentTarget","count","Number","get","getState","a","generated","renewElements","defaultValue","type","inputMode","pattern","autoComplete","App","generatedElements","store","configureStore","reducer","preloadedState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.394b8895.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"page_page__2koG9\"};","import { createSlice } from '@reduxjs/toolkit';\nimport { initialPageHeight, initialPageWidth } from '../../app/config';\n\nexport const pageSlice = createSlice({\n  name: 'page',\n  initialState: {\n    width: initialPageWidth,\n    height: initialPageHeight,\n  },\n});\n\nexport const selectPage = (state) => state.page;\n","export const initialPageWidth = 400;\nexport const initialPageHeight = 400;\nexport const initialElementsCount = 100;\nexport const minElementSize = 40;\nexport const maxElementSize = 100;\nexport const pageBackgroundColor = '#d8d8d8';\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectPage } from './page-slice';\nimport styles from './page.module.css';\nimport { pageBackgroundColor } from '../../app/config';\n\nexport function Page(props) {\n  const { children } = props;\n  const page = useSelector(selectPage);\n\n  return (\n    <div\n      className={styles.page}\n      style={{\n        width: `${page.width}px`,\n        height: `${page.height}px`,\n        backgroundColor: pageBackgroundColor,\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n","export const random = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst pad = (num, size) => {\n  const s = '000000000' + num;\n  return s.substr(s.length - size);\n};\n\nexport const generateColor = ({ excludeColors = [] } = {}) => {\n  const randomColor = () => {\n    const r = pad(random(0, 255).toString(16), 2);\n    const g = pad(random(0, 255).toString(16), 2);\n    const b = pad(random(0, 255).toString(16), 2);\n\n    const generatedColor = `#${r}${g}${b}`;\n\n    const isInvalidColor = excludeColors.includes(\n      (color) => color === generatedColor,\n    );\n\n    return isInvalidColor ? randomColor() : generatedColor;\n  };\n\n  return randomColor();\n};\n\nexport const createArray = (length, fn = () => undefined) => {\n  const arr = [];\n\n  for (let i = 0; i < length; i++) {\n    arr.push(fn(i));\n  }\n\n  return arr;\n};\n\nexport const sleep = (timeout) =>\n  new Promise((resolve) => setTimeout(() => resolve(), timeout));\n","import { nanoid } from 'nanoid';\nimport { generateColor, random } from '../../lib';\nimport {\n  maxElementSize,\n  minElementSize,\n  pageBackgroundColor,\n} from '../../app/config';\n\nexport const generateElement = ({ pageSize }) => {\n  const width = random(minElementSize, maxElementSize);\n  const height = random(minElementSize, maxElementSize);\n\n  return {\n    id: nanoid(),\n    width,\n    height,\n    backgroundColor: generateColor({ excludeColors: [pageBackgroundColor] }),\n    x: random(0, pageSize.width - width),\n    y: random(0, pageSize.height - height),\n  };\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { createArray } from '../../lib';\nimport { generateElement } from './generate-element';\n\nexport const elementsSlice = createSlice({\n  name: 'elements',\n  initialState: [],\n  reducers: {\n    renew: (state, { payload }) => {\n      return payload;\n    },\n    updateElementPosition: (state, { payload }) => {\n      const item = state.find((item) => item.id === payload.id);\n\n      if (item) {\n        item.x = payload.x;\n        item.y = payload.y;\n      }\n    },\n  },\n});\n\nexport const { updateElementPosition, renew } = elementsSlice.actions;\n\nexport const renewElements = (count) => async (dispatch, getState) => {\n  const { page } = getState();\n\n  const generated = createArray(count, () =>\n    generateElement({\n      pageSize: {\n        width: page.width,\n        height: page.height,\n      },\n    }),\n  );\n\n  return dispatch(renew(generated));\n};\n\nexport const selectElements = (state) => state.elements;\n","import React from 'react';\nimport Draggable from 'react-draggable';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './elements.module.css';\nimport { selectElements, updateElementPosition } from './elements-slice';\n\nconst Rectangle = React.memo((props) => {\n  const { width, height, backgroundColor } = props;\n  return <div style={{ width, height, backgroundColor }} />;\n});\n\nconst DraggableRectangle = React.memo(\n  (props) => {\n    const { id, width, height, backgroundColor, x, y } = props;\n    const nodeRef = React.useRef(null);\n    const dispatch = useDispatch();\n\n    const handleDraggableStop = React.useCallback(\n      (_, { node, x, y }) => {\n        dispatch(updateElementPosition({ id: node.dataset.id, x, y }));\n      },\n      [dispatch],\n    );\n\n    const draggableChild = (\n      <div className={styles['draggable-rectangle']} ref={nodeRef} data-id={id}>\n        <Rectangle\n          width={width}\n          height={height}\n          backgroundColor={backgroundColor}\n        />\n      </div>\n    );\n\n    return (\n      <Draggable\n        enableUserSelectHack={false}\n        bounds={'parent'}\n        defaultPosition={{ x, y }}\n        nodeRef={nodeRef}\n        onStop={handleDraggableStop}\n      >\n        {draggableChild}\n      </Draggable>\n    );\n  },\n  () => true,\n);\n\nexport const Elements = () => {\n  const elements = useSelector(selectElements);\n\n  return elements.map((element) => {\n    return (\n      <DraggableRectangle\n        key={element.id}\n        id={element.id}\n        width={element.width}\n        height={element.height}\n        x={element.x}\n        y={element.y}\n        backgroundColor={element.backgroundColor}\n      />\n    );\n  });\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectElements, renewElements } from './elements-slice';\nimport styles from './elements.module.css';\n\nexport const ElementsForm = () => {\n  const dispatch = useDispatch();\n  const elements = useSelector(selectElements);\n\n  return (\n    <form\n      className={styles.form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        const formData = new FormData(e.currentTarget);\n        const count = Number(formData.get('count'));\n\n        dispatch(renewElements(count));\n      }}\n    >\n      <input\n        defaultValue={elements.length}\n        name=\"count\"\n        type=\"text\"\n        inputMode=\"numeric\"\n        pattern=\"[0-9]*\"\n        autoComplete=\"off\"\n      />\n      <button>GENERATE</button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { Page } from './features/page';\nimport { Elements, ElementsForm } from './features/elements';\n\nexport function App() {\n  return (\n    <>\n      <Page>\n        <Elements />\n      </Page>\n      <ElementsForm />\n    </>\n  );\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport { pageSlice } from '../features/page';\nimport { elementsSlice, generateElement } from '../features/elements';\nimport { createArray } from '../lib';\nimport {\n  initialPageWidth,\n  initialPageHeight,\n  initialElementsCount,\n} from './config';\n\nconst generatedElements = createArray(initialElementsCount, () =>\n  generateElement({\n    pageSize: {\n      width: initialPageWidth,\n      height: initialPageHeight,\n    },\n  }),\n);\n\nexport const store = configureStore({\n  reducer: {\n    page: pageSlice.reducer,\n    elements: elementsSlice.reducer,\n  },\n  preloadedState: {\n    elements: generatedElements,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './app';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draggable-rectangle\":\"elements_draggable-rectangle__1IpQo\",\"form\":\"elements_form__3Jw7j\"};"],"sourceRoot":""}